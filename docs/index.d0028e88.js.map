{"mappings":"qhBAMO,MAAMA,EACXC,YACkBC,EACAC,EACTC,EACAC,EAAgB,I,cAHPH,E,cACAC,E,gBACTC,E,WACAC,CACN,ECVL,MAAMC,EAAkB,0EAEjBC,eAAeC,EAASC,EAAWC,GACxC,MAAMC,EAAM,GAAGL,IAAUI,SAEnBE,EAAO,CACXC,OAAQ,MACRC,KAAMC,KAAKC,UAAUP,GACrBQ,QAAS,CACP,eAAgB,0CAGdC,MAAMP,EAAKC,EACnB,CAEOL,eAAeY,IACpB,MAAMR,EAAcL,EAAU,QAExBc,QAAiBF,MAAMP,GAE7B,aADmBS,EAASC,MAE9B,CCpByBC,SAASC,cAAc,gBACtBD,SAASC,cAAc,gBAC1BD,SAASC,cAAc,aASvC,MAAMC,EAAeC,aAAaC,QAAQ,gB,iBCT7CF,GACFG,SAASC,OAAO,qBAGlB,MAAMC,EAAyCP,SAASC,cAAc,mBAChEO,EAAoCR,SAASC,cAAc,cAE7DM,GACFA,EAAeE,iBAAiB,UAAUxB,MAAOyB,IAC/CA,EAAMC,iBACN,MAAM/B,EAAmBoB,SAAUC,cAAc,iBAAsCW,MACjF/B,EAAmBmB,SAAUC,cAAc,iBAAsCW,MACjF9B,EAAqBkB,SAAUC,cAAc,oCAAyDW,MACtGC,EAAYC,EAAAC,EAAA,GAASC,OAAO,uBAKlC9B,EAJgB,IAAIR,EAAKE,EAAUC,EAAUC,EAAY,CAAC,CAAEmC,QAAS,qCAAsCJ,UAAWA,YAE1FhB,KACAqB,QAE5BC,MAAM,cAAcvC,4BAAkC,IAItD4B,GACFA,EAAUC,iBAAiB,UAAUxB,MAAOyB,IAC1CA,EAAMC,iBACN,MAIMS,EAQV,SAAoBC,EAAuBC,EAAuBC,GAChE,IAAIC,GAAyB,EAe7B,OAbAD,EAAME,SAASC,IAETA,GAAgBA,EAAa9C,WAAayC,IAC5CG,GAAgB,EAEZE,EAAa7C,WAAayC,GAC5BnB,aAAawB,QAAQ,eAAgBN,GACrChB,SAASC,OAAO,mBAEhBa,MAAM,mBAEV,IAEKK,CACT,CAzBoBI,CAJc5B,SAAUC,cAAc,aAAkCW,MAC1DZ,SAAUC,cAAc,aAAkCW,YAE5Df,KAGvBuB,GACHD,MAAM","sources":["src/modules/userclass.ts","src/modules/firebase.ts","src/modules/globals.ts","src/index.ts"],"sourcesContent":["// type alias för hur status-arrayen posts ska se ut\nexport type Post = {\n  message: string;\n  timestamp: string;\n};\n\nexport class User {\n  constructor(\n    public readonly username: string,\n    public readonly password: string,\n    public profilepic: string,\n    public posts: Post[] = []\n  ) {}\n}\n","import { User } from \"../modules/userclass\";\n\nconst baseUrl: string = \"https://slutprojekt-js2-default-rtdb.europe-west1.firebasedatabase.app/\";\n\nexport async function postUser(obj: User, index: number): Promise<void> {\n  const url = `${baseUrl}${index}.json`;\n\n  const init = {\n    method: \"PUT\",\n    body: JSON.stringify(obj),\n    headers: {\n      \"Content-Type\": \"application/json; charset=UTF-8\",\n    },\n  };\n  await fetch(url, init);\n}\n\nexport async function getAllUsers():Promise<User[]> {\n  const url: string = baseUrl + \".json\";\n\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n}\n\nexport async function postStatus(obj: { message: string; timestamp: string }, userindex: number, postindex: number): Promise<void> {\n  // userindex: vilken användare det ska postas i. postindex: vilken positition i statusarrayen det ska postas i.\n  const url = `${baseUrl}${userindex}/posts/${postindex}.json`;\n\n  const init = {\n    method: \"PUT\",\n    body: JSON.stringify(obj),\n    headers: {\n      \"Content-Type\": \"application/json; charset=UTF-8\",\n    },\n  };\n  await fetch(url, init);\n}\n\nexport async function deleteUser(userindex: number): Promise<void> {\n  const url = `${baseUrl}${userindex}.json`;\n\n  const init = {\n    method: \"DELETE\",\n  };\n  await fetch(url, init);\n}\n","// återkommande variabler/funktioner\n\n// hämtar knappar\nexport const logOutBtn = document.querySelector(\".log-out-btn\") as HTMLButtonElement;\nexport const profileBtn = document.querySelector(\".profile-btn\") as HTMLButtonElement;\nexport const feedBtn = document.querySelector(\".feed-btn\") as HTMLButtonElement;\n\n// logga ut-funktion\nexport function logOut(): void {\n  localStorage.removeItem(\"loggedInUser\");\n  location.assign(\"../index.html\");\n}\n\n// hämtar inloggad användare\nexport const userloggedin = localStorage.getItem(\"loggedInUser\") as string;\n","import { User } from \"./modules/userclass\";\nimport { postUser, getAllUsers } from \"./modules/firebase\";\nimport { userloggedin } from \"./modules/globals\";\nimport moment from 'moment';\n\nif (userloggedin) {\n  location.assign(\"../html/feed.html\");\n}\n\nconst createUserForm: HTMLFormElement | null = document.querySelector(\"#createUserForm\");\nconst loginForm: HTMLFormElement | null = document.querySelector(\"#loginForm\");\n\nif (createUserForm) {\n  createUserForm.addEventListener(\"submit\", async (event) => {\n    event.preventDefault();\n    const username: string = (document.querySelector(\"#new-username\") as HTMLInputElement).value;\n    const password: string = (document.querySelector(\"#new-password\") as HTMLInputElement).value;\n    const profilepic: string = (document.querySelector('input[name=\"profilepic\"]:checked') as HTMLInputElement).value;\n    const timestamp = moment().format('YYYY-MM-DD HH:mm:ss');\n    const userObj = new User(username, password, profilepic, [{ message: \"Hej! Det här är min första status.\", timestamp: timestamp }]);\n\n    const users: User[] = await getAllUsers();\n    const index: number = users.length;\n    postUser(userObj, index);\n    alert(`Välkommen, ${username}! Nu kan du logga in. :)`);\n  });\n}\n\nif (loginForm) {\n  loginForm.addEventListener(\"submit\", async (event) => {\n    event.preventDefault();\n    const inputUsername: string = (document.querySelector(\"#username\") as HTMLInputElement).value;\n    const inputPassword: string = (document.querySelector(\"#password\") as HTMLInputElement).value;\n\n    const users: User[] = await getAllUsers();\n    const checked = checkLogin(inputUsername, inputPassword, users);\n\n    if (!checked) {\n      alert(\"Kunde inte hitta användare. Är du säker på att du stavade rätt?\");\n    }\n  });\n}\n\nfunction checkLogin(inputUsername: string, inputPassword: string, users: User[]): boolean {\n  let usernameFound: boolean = false;\n\n  users.forEach((databaseUser) => {\n    // loop1: hitta om användarnamnet finns\n    if (databaseUser && databaseUser.username === inputUsername) {\n      usernameFound = true;\n      // loop2: jämföra lösenord\n      if (databaseUser.password === inputPassword) {\n        localStorage.setItem(\"loggedInUser\", inputUsername);\n        location.assign(\"html/feed.html\");\n      } else {\n        alert(\"Fel lösenord :(\");\n      }\n    }\n  });\n  return usernameFound;\n}\n"],"names":["$ae2b09bc2766bc9a$export$1f44aaf2ec115b54","constructor","username","password","profilepic","posts","$14f6629ccf7de9b8$var$baseUrl","async","$14f6629ccf7de9b8$export$402fbb8c0ae400db","obj","index","url","init","method","body","JSON","stringify","headers","fetch","$14f6629ccf7de9b8$export$69093b9c569a5b5b","response","json","document","querySelector","$fce15b2523ffd002$export$9d74ddc3c84cf434","localStorage","getItem","location","assign","$b4e14b6b8da86996$var$createUserForm","$b4e14b6b8da86996$var$loginForm","addEventListener","event","preventDefault","value","timestamp","$parcel$interopDefault","$45fvw","format","message","length","alert","checked","inputUsername","inputPassword","users","usernameFound","forEach","databaseUser","setItem","$b4e14b6b8da86996$var$checkLogin"],"version":3,"file":"index.d0028e88.js.map"}