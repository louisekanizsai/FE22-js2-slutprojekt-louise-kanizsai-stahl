{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-bb33c4ea802bb2e1.js","src/modules/firebase.ts","src/modules/creategui.ts","node_modules/@parcel/runtime-js/lib/runtime-f5646c4e34832995.js","node_modules/@parcel/runtime-js/lib/runtime-f8f97b0b8566b7eb.js","node_modules/@parcel/runtime-js/lib/runtime-15f18364f7f5e257.js","src/modules/globals.ts","src/modules/profile.ts"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"6eg5j\\\":\\\"profile.9fad9e6a.js\\\",\\\"fudG5\\\":\\\"cat.099c148c.png\\\",\\\"S7XuS\\\":\\\"elephant.fa51bf24.png\\\",\\\"cmZiW\\\":\\\"turtle.bbf3eac3.png\\\",\\\"3gJ8R\\\":\\\"profile.5fc18753.js\\\"}\"));","import { User } from \"../modules/userclass\";\n\nconst baseUrl: string = \"https://slutprojekt-js2-default-rtdb.europe-west1.firebasedatabase.app/\";\n\nexport async function postUser(obj: User, index: number): Promise<void> {\n  const url = `${baseUrl}${index}.json`;\n\n  const init = {\n    method: \"PUT\",\n    body: JSON.stringify(obj),\n    headers: {\n      \"Content-Type\": \"application/json; charset=UTF-8\",\n    },\n  };\n  await fetch(url, init);\n}\n\nexport async function getAllUsers():Promise<User[]> {\n  const url: string = baseUrl + \".json\";\n\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n}\n\nexport async function postStatus(obj: { message: string; timestamp: string }, userindex: number, postindex: number): Promise<void> {\n  // userindex: vilken användare det ska postas i. postindex: vilken positition i statusarrayen det ska postas i.\n  const url = `${baseUrl}${userindex}/posts/${postindex}.json`;\n\n  const init = {\n    method: \"PUT\",\n    body: JSON.stringify(obj),\n    headers: {\n      \"Content-Type\": \"application/json; charset=UTF-8\",\n    },\n  };\n  await fetch(url, init);\n}\n\nexport async function deleteUser(userindex: number): Promise<void> {\n  const url = `${baseUrl}${userindex}.json`;\n\n  const init = {\n    method: \"DELETE\",\n  };\n  await fetch(url, init);\n}\n","import { getAllUsers } from \"../modules/firebase\";\nimport { User, Post } from \"../modules/userclass\";\n\n// OBS OBS \n\n// Hej Clara! \n//I den här filen får jag ett errormeddelande från vscode varje gång jag skriver import.meta.url (men bara på min laptop, inte när jag sitter hemma med en annan dator). Det här är påminnelsekommentaren du bad mig skriva om att vi pratade om detta på en handledning och du sa att det var okej :)\n\nconst userloggedin = localStorage.getItem(\"loggedInUser\");\n\n// funktion som visar info om den inloggade användaren längst upp till höger bredvid navigationsknapparna\nexport async function displayMyInfo(): Promise<void> {\n  const userInfoDiv = document.querySelector(\".userinfo\") as HTMLParagraphElement;\n\n  const users: User[] = await getAllUsers();\n  users.forEach((user) => {\n    if (user && user.username === userloggedin) {\n      const userNameText: HTMLParagraphElement = document.createElement(\"p\");\n      const userProfilePic: HTMLImageElement = document.createElement(\"img\");\n      let imgUrl: URL;\n\n      userInfoDiv.append(userNameText, userProfilePic);\n      userNameText.innerText = user.username;\n\n      if (user.profilepic == \"cat.png\") {\n        imgUrl = new URL(\"../images/cat.png\", import.meta.url);\n      } else if (user.profilepic == \"elephant.png\") {\n        imgUrl = new URL(\"../images/elephant.png\", import.meta.url);\n      } else {\n        imgUrl = new URL(\"../images/turtle.png\", import.meta.url);\n      }\n      userProfilePic.src = imgUrl.href;\n    }\n  });\n}\n\n// Funktion som skapar element som innehåller all info om statusen (användarnamn, status, timestamp). Anropas i users.ts, profile.ts och feed.ts\n// andra argumentet är userOrPost för att i vissa filer kommer man åt username med user.username och i vissa med post.username. I feed.ts är det inte User utan type aliasen PostInfo (definieras under denna funktion)\n\nexport function createPostGUI(post:Post,userOrPost: User | PostInfo, appendTo: HTMLElement): void {\n    const postElement = document.createElement(\"div\");\n    postElement.classList.add(\"post\");\n    const userNameAndPic = document.createElement(\"div\");\n    userNameAndPic.classList.add(\"userNameAndPic\");\n\n    const userProfilePicElement = document.createElement(\"img\");\n    userProfilePicElement.classList.add(\"profilepic\");\n\n    // lägga bilden och användarnamnet i gemensam div. lägg diven i postElement rad 66\n    let imgUrl: URL;\n\n    if (\"profilepic\" in userOrPost && userOrPost.profilepic == \"cat.png\") {\n      imgUrl = new URL(\"../images/cat.png\", import.meta.url);\n    } else if (\"profilepic\" in userOrPost && userOrPost.profilepic == \"elephant.png\") {\n      imgUrl = new URL(\"../images/elephant.png\", import.meta.url);\n    } else {\n      imgUrl = new URL(\"../images/turtle.png\", import.meta.url);\n    }\n    userProfilePicElement.src = imgUrl.href;\n\n    const usernameElement = document.createElement(\"div\");\n    usernameElement.classList.add(\"username\");\n    usernameElement.innerText = userOrPost.username;\n        \n    userNameAndPic.append(userProfilePicElement,usernameElement);\n\n    const messageElement = document.createElement(\"div\");\n    messageElement.classList.add(\"message\");\n    messageElement.innerText = post.message;\n\n    const timestampElement = document.createElement(\"div\");\n    timestampElement.classList.add(\"timestamp\");\n    const date = new Date(post.timestamp);\n    timestampElement.innerText = `${date.toLocaleDateString()} ${date.toLocaleTimeString()}`;\n    postElement.append(userNameAndPic,messageElement, timestampElement);\n\n    appendTo.append(postElement);\n}\n\n// typen av objekt som ska in i den array som innehåller all info vi vill skriva ut om varje status. Används i feed.ts (till funktionen ovan, createPostGUI)\nexport type PostInfo = {\n  username: string;\n  profilepic: string;\n  message: string;\n  timestamp: string;\n}\n\n// Funktion som visar info om användaren vars profil man är inne på i ett \"card\"\nexport async function displayUserCard(clickedOrLoggedinUser:string): Promise<void> {\n  const userCard = document.querySelector(\".user-card\") as HTMLDivElement;\n  const usernameh3 = document.querySelector(\".user-card h3\") as HTMLHeadingElement;\n  usernameh3.innerText = clickedOrLoggedinUser;\n\n  const users: User[] = await getAllUsers();\n  users.forEach((user) => {\n    if(user && user.username === clickedOrLoggedinUser){\n      const userProfilePic: HTMLImageElement = document.createElement(\"img\");\n      let imgUrl: URL;\n\n      userCard.append(userProfilePic);\n      if (user.profilepic == \"cat.png\") {\n        imgUrl = new URL(\"../images/cat.png\", import.meta.url);\n      } else if (user.profilepic == \"elephant.png\") {\n        imgUrl = new URL(\"../images/elephant.png\", import.meta.url);\n      } else {\n        imgUrl = new URL(\"../images/turtle.png\", import.meta.url);\n      }\n      userProfilePic.src = imgUrl.href;\n    }\n  });\n}","module.exports = new __parcel__URL__(\"../\" + require('./helpers/bundle-manifest').resolve(\"fudG5\")).toString();","module.exports = new __parcel__URL__(\"../\" + require('./helpers/bundle-manifest').resolve(\"S7XuS\")).toString();","module.exports = new __parcel__URL__(\"../\" + require('./helpers/bundle-manifest').resolve(\"cmZiW\")).toString();","// återkommande variabler/funktioner\n\n// hämtar knappar\nexport const logOutBtn = document.querySelector(\".log-out-btn\") as HTMLButtonElement;\nexport const profileBtn = document.querySelector(\".profile-btn\") as HTMLButtonElement;\nexport const feedBtn = document.querySelector(\".feed-btn\") as HTMLButtonElement;\n\n// logga ut-funktion\nexport function logOut(): void {\n  localStorage.removeItem(\"loggedInUser\");\n  location.assign(\"../index.html\");\n}\n\n// hämtar inloggad användare\nexport const userloggedin = localStorage.getItem(\"loggedInUser\") as string;\n","import { User } from \"../modules/userclass\";\nimport {getAllUsers, postStatus, deleteUser} from \"../modules/firebase\";\nimport { displayMyInfo, createPostGUI, displayUserCard } from \"../modules/creategui\";\nimport { logOutBtn, feedBtn, logOut, userloggedin } from \"../modules/globals\";\nimport moment from 'moment';\n\nif (userloggedin) {\n  displayMyInfo();\n  displayUserCard(userloggedin);\n  displayMyPosts();\n} else {\n  location.assign(\"../index.html\");\n}\n\n// hämtar ens statusuppdateringar från firebase\nasync function displayMyPosts(): Promise<void> {\n  const myPosts = document.querySelector(\"#my-posts\") as HTMLDivElement;\n  myPosts.innerHTML = \"\";\n  const users: User[] = await getAllUsers();\n  users.forEach(user => {\n    // hittar den användaren vars namn stämmer överens med inloggade användarens namn\n    if (user && user.username === userloggedin) {\n      // skapar element för att visa statusarna i omvänd ordning (senaste först)\n      user.posts.reverse().forEach((post) => {\n        createPostGUI(post,user,myPosts);\n      });\n    }\n  });\n}\n\n// Skriva ny statusuppdatering\nconst newPostForm: HTMLFormElement | null = document.querySelector(\"#newPostForm\");\n\nif (newPostForm) {\n  newPostForm.addEventListener(\"submit\",async (event) => {\n    event.preventDefault();\n    const newPost: string = (document.querySelector(\"#new-post\") as HTMLInputElement).value;\n    \n    //statusobjektet som ska skickas in i databasen\n    const postObj = {\n      message: newPost,\n      timestamp: moment().format('YYYY-MM-DD HH:mm:ss'),\n    };\n    \n    const users: User[] = await getAllUsers();\n    users.forEach((user, index) => {\n      if (user && user.username === userloggedin) {\n        const userIndex = index; // index som den inloggade användaren befinner sig på i databasen\n        const postIndex = user.posts.length; // index i posts-arrayen där den nya statusen ska ligga\n        postStatus(postObj, userIndex, postIndex).then(displayMyPosts);\n      }\n    });\n  });\n}\n\n// ta bort konto (popup):\nconst deleteAccountBtn = document.getElementById(\"delete-account\") as HTMLButtonElement;\nconst confirmDeleteBtn = document.getElementById(\"confirm-delete\") as HTMLButtonElement;\nconst cancelDeleteBtn = document.getElementById(\"cancel-delete\") as HTMLButtonElement;\nconst confirmDeletePopup = document.getElementById(\"confirm-delete-popup\") as HTMLDivElement;\n\ndeleteAccountBtn.addEventListener(\"click\", () => {\n  confirmDeletePopup.style.display = \"block\";\n});\n\ncancelDeleteBtn.addEventListener(\"click\", () => {\n  confirmDeletePopup.style.display = \"none\";\n});\n\nconfirmDeleteBtn.addEventListener(\"click\", async () => {\n  const users: User[] = await getAllUsers();\n  users.forEach((user, index) => {\n    if (user && user.username === userloggedin) {\n      deleteUser(index).then(logOut);\n    }\n  });\n  confirmDeletePopup.style.display = \"none\";\n});\n\nlogOutBtn.addEventListener(\"click\", () => {\n  logOut();\n});\n\nfeedBtn.addEventListener(\"click\", () => {\n  location.assign(\"./feed.html\");\n});"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$14f6629ccf7de9b8$var$baseUrl","async","$14f6629ccf7de9b8$export$69093b9c569a5b5b","url","response","fetch","json","$14f6629ccf7de9b8$export$4ea5da9bf71391e2","obj","userindex","postindex","init","method","body","stringify","headers","$14f6629ccf7de9b8$export$7d0f10f273c0438a","$7b6d994e870594e3$var$userloggedin","localStorage","getItem","$ac281fbda0155fa7$exports","URL","resolve","toString","$459176948b27fb78$exports","$7b6d994e870594e3$export$c4c37be02a9f7b8","post","userOrPost","appendTo","postElement","document","createElement","classList","add","userNameAndPic","userProfilePicElement","imgUrl","profilepic","$481f1b800b0d5844$exports","src","href","usernameElement","innerText","username","append","messageElement","message","timestampElement","date","Date","timestamp","toLocaleDateString","toLocaleTimeString","$fce15b2523ffd002$export$ad22c3c7f6307364","querySelector","$fce15b2523ffd002$export$29c0cc66d8b246a2","$fce15b2523ffd002$export$464881f0a7cf0212","removeItem","location","assign","$fce15b2523ffd002$export$9d74ddc3c84cf434","$c5272c87d5623534$var$displayMyPosts","myPosts","innerHTML","forEach","user","posts","reverse","userInfoDiv","userNameText","userProfilePic","clickedOrLoggedinUser","userCard","$c5272c87d5623534$var$newPostForm","addEventListener","event","preventDefault","postObj","value","$parcel$interopDefault","$45fvw","format","index","userIndex","postIndex","then","$c5272c87d5623534$var$deleteAccountBtn","getElementById","$c5272c87d5623534$var$confirmDeleteBtn","$c5272c87d5623534$var$cancelDeleteBtn","$c5272c87d5623534$var$confirmDeletePopup","style","display"],"version":3,"file":"profile.9fad9e6a.js.map"}